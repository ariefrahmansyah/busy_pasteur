name: "Create cluster using KinD"
on: [pull_request, push]

jobs:
  kind:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    # - uses: engineerd/setup-kind@v0.4.0
    #   with:
    #     version: "v0.8.1"
    #     config: kind-config.yaml
    - name: Setup Kind
      run: |
        kind create cluster --config=kind-config.yaml
    # - name: Install Knative Serving
    #   run: |
    #     kubectl apply --filename https://github.com/knative/serving/releases/download/v0.17.0/serving-crds.yaml
    #     kubectl apply --filename https://github.com/knative/serving/releases/download/v0.17.0/serving-core.yaml
    
    - name: Install Knative serving
      run: |
        kubectl apply --filename https://github.com/knative/serving/releases/download/v0.17.0/serving-crds.yaml
        kubectl apply --filename knative-serving-core.yaml

    - name: Install Knative Istio
      run: |
        curl -sL https://istio.io/downloadIstio | ISTIO_VERSION=1.7.0 sh -
        sudo install istio-1.7.0/bin/istioctl /usr/bin/istioctl
        istioctl install -f istio-minimal-operator.yaml 
        kubectl apply --filename https://github.com/knative/net-istio/releases/download/v0.17.0/release.yaml
        kubectl patch configmap/config-domain \
          --namespace knative-serving \
          --type merge \
          --patch '{"data":{"127.0.0.1.xip.io":""}}'
    - name: Kubernetes Node Status
      run: kubectl describe nodes
    - name: Test Knative Service with Istio
      run: |
        kubectl apply -f deploy-knative-services/
        sleep 15
        kubectl wait --for=condition=Ready --timeout=300s service.serving.knative.dev/foo
        kubectl wait --for=condition=Ready --timeout=300s service.serving.knative.dev/bar
        sleep 15
        kubectl get pod,kservice,revision,virtualservice,gateway

        curl http://foo.default.127.0.0.1.xip.io
        curl -v http://bar.default.127.0.0.1.xip.io
    - name: Kube Node Status
      run: kubectl describe nodes
    # - name: Test Ingress
    #   run: |
    #     kubectl apply -f test-ingress.yaml
    #     sleep 5
    #     kubectl get all,ingress
    #     sleep 30
    #     kubectl get all,ingress
    #     curl localhost/foo
    #     curl localhost/bar